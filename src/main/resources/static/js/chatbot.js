document.addEventListener("DOMContentLoaded", function () {
   const chatIcon = document.createElement("div");
   chatIcon.innerHTML = "üí¨";
   chatIcon.style.position = "fixed";
   chatIcon.style.bottom = "60px";
   chatIcon.style.right = "20px";
   chatIcon.style.width = "50px";
   chatIcon.style.height = "50px";
   chatIcon.style.backgroundColor = "#ff7f50";
   chatIcon.style.borderRadius = "50%";
   chatIcon.style.display = "flex";
   chatIcon.style.justifyContent = "center";
   chatIcon.style.alignItems = "center";
   chatIcon.style.cursor = "pointer";
   chatIcon.style.boxShadow = "0 4px 8px rgba(0,0,0,0.2)";
   chatIcon.style.zIndex = "1000";
   document.body.appendChild(chatIcon);

   const chatWindow = document.createElement("div");
   chatWindow.style.position = "fixed";
   chatWindow.style.bottom = "80px";
   chatWindow.style.right = "50px";
   chatWindow.style.width = "85%";
   chatWindow.style.maxWidth = "350px";
   chatWindow.style.height = "70vh";
   chatWindow.style.maxHeight = "500px";
   chatWindow.style.background = "white";
   chatWindow.style.borderRadius = "10px";
   chatWindow.style.boxShadow = "0 4px 8px rgba(0,0,0,0.2)";
   chatWindow.style.display = "none";
   chatWindow.style.flexDirection = "column";
   chatWindow.style.overflow = "hidden";
   chatWindow.style.zIndex = "1000";
   document.body.appendChild(chatWindow);

   chatIcon.addEventListener("click", function () {
       chatWindow.style.display = chatWindow.style.display === "none" ? "flex" : "none";
   });

   chatWindow.innerHTML = `
   <div style="background:#ff7f50;color:white;padding:10px;text-align:center;border-top-left-radius:10px;border-top-right-radius:10px;position:relative;display: flex; align-items: center;">
       <!-- H√¨nh ·∫£nh n·∫±m ngo√†i c√πng b√™n tr√°i -->
       <img src="https://gigamall.com.vn/data/2024/05/10/14290213_shushiwa_thumbnail.jpg" title="Chatbot" style="width:25px;height:25px;border-radius:50%;vertical-align:middle;margin-right:10px;" />
       <center>Chatbot </center>	
	   <a id="call-support" href="tel:0974802998" style="position:absolute;top:10px;right:30px;font-size:15px;color:white;cursor:pointer;">
	       <i class="fas fa-phone"></i>
	   </a>
       <p id="close-chat" style="position:absolute;top:10px;right:10px;font-size:20px;color:white;cursor:pointer;">&times;</p>
   </div>
	   <div id="chat-body" style="flex:1;padding:10px;overflow-y:auto;font-size:14px;">
	       <div style="display:flex; justify-content: flex-start; margin-bottom:10px;">
	           <img src="https://gigamall.com.vn/data/2024/05/10/14290213_shushiwa_thumbnail.jpg" title="Chatbot" style="width:25px;height:25px;border-radius:50%;vertical-align:middle;margin-right:5px;" />
	           <div style="background:#ff7f50;color:white;padding:10px;border-radius:10px;max-width:60%;text-align:left;display:flex;align-items:center;">
	               <span>Xin ch√†o! T√¥i c√≥ th·ªÉ gi√∫p g√¨ ƒë∆∞·ª£c cho b·∫°n?<br>
				   Hotline: <a href="tel:0974802998">097 480 2998</a>
				   </span>
	           </div>
	       </div>
	   </div>
       <div id="suggestions" style="padding:10px;display:flex;flex-wrap:no-wrap;overflow-x:auto;width:100%;margin-bottom:10px;font-size:12px;"></div>
       <div style="display:flex;padding:10px;border-top:1px solid #ddd;font-size:12px;">
           <input id="chat-input" type="text" style="flex:1;padding:5px;border:1px solid #ddd;border-radius:5px;font-size:12px;" required>
           <button id="chat-send" style="margin-left:5px;padding:5px 10px;background:#ff7f50;color:white;border:none;border-radius:5px;font-size:12px;">G·ª≠i</button>
       </div>
   `;
   
   // L·∫Øng nghe s·ª± ki·ªán click tr√™n bi·ªÉu t∆∞·ª£ng d·∫•u "X" ƒë·ªÉ ƒë√≥ng chatbot
   const closeChatButton = document.getElementById("close-chat");

   closeChatButton.addEventListener("click", function () {
       chatWindow.style.display = "none"; // ·∫®n c·ª≠a s·ªï chatbot
   });
   // Th√™m s·ª± ki·ªán click v√†o h√¨nh ·∫£nh ƒë·ªÉ ph√≥ng to ·∫£nh
    
   const chatBody = document.getElementById("chat-body");
   const chatInput = document.getElementById("chat-input");
   const suggestions = document.getElementById("suggestions");
   const chatSend = document.getElementById("chat-send");
   // L·∫Øng nghe s·ª± ki·ªán click v√†o c√°c ·∫£nh trong chatbot
   chatBody.addEventListener("click", function(event) {
       if (event.target.tagName === "IMG") {
           const imageUrl = event.target.src;
           const allImages = Array.from(chatBody.querySelectorAll("img")); // L·∫•y t·∫•t c·∫£ h√¨nh ·∫£nh trong chatBody
           const currentIndex = allImages.findIndex(img => img.src === imageUrl);
           openModal(imageUrl, allImages, currentIndex);
       }
   });

   // H√†m m·ªü modal ph√≥ng to ·∫£nh
   function openModal(imageUrl, allImages, currentIndex) {
       const modal = document.createElement("div");
       modal.style.position = "fixed";
       modal.style.top = "0";
       modal.style.left = "0";
       modal.style.width = "100%";
       modal.style.height = "100%";
       modal.style.backgroundColor = "rgba(0, 0, 0, 0.8)";
       modal.style.display = "flex";
       modal.style.justifyContent = "center";
       modal.style.alignItems = "center";
       modal.style.zIndex = "2000";
       modal.style.cursor = "pointer";
       modal.style.flexDirection = "column"; // S·∫Øp x·∫øp theo c·ªôt ƒë·ªÉ hi·ªÉn th·ªã h√¨nh thu nh·ªè d∆∞·ªõi ·∫£nh ph√≥ng to

       const modalImage = document.createElement("img");
       modalImage.src = imageUrl;
       modalImage.style.maxWidth = "90%";
       modalImage.style.maxHeight = "80%";
       modalImage.style.borderRadius = "10px";
       modal.appendChild(modalImage);

       // T·∫°o n√∫t ƒë√≥ng "X"
       const closeButton = document.createElement("span");
       closeButton.innerHTML = "&times;";
       closeButton.style.position = "absolute";
       closeButton.style.top = "20px";
       closeButton.style.right = "20px";
       closeButton.style.fontSize = "30px";
       closeButton.style.color = "white";
       closeButton.style.cursor = "pointer";
       closeButton.style.zIndex = "3000";
       closeButton.addEventListener("click", function () {
           document.body.removeChild(modal);
       });

       modal.appendChild(closeButton);

       // T·∫°o ph·∫ßn thu nh·ªè c√°c ·∫£nh ph√≠a d∆∞·ªõi ·∫£nh ph√≥ng to
       const thumbnailsContainer = document.createElement("div");
	   thumbnailsContainer.style.display = "flex";
	   thumbnailsContainer.style.marginTop = "10px";
	   thumbnailsContainer.style.overflowX = "auto"; // Cho ph√©p cu·ªôn ngang
	   thumbnailsContainer.style.padding = "10px";
	   thumbnailsContainer.style.justifyContent = "center"; // CƒÉn gi·ªØa ·∫£nh thu nh·ªè
	   thumbnailsContainer.style.alignItems = "center"; // CƒÉn gi·ªØa theo chi·ªÅu d·ªçc
	   thumbnailsContainer.style.maxWidth = "100%"; // ƒê·∫£m b·∫£o ph·∫ßn thu nh·ªè kh√¥ng v∆∞·ª£t ra ngo√†i
	   thumbnailsContainer.style.flexWrap = "nowrap"; // Kh√¥ng cho c√°c ·∫£nh thu nh·ªè xu·ªëng h√†ng
	   thumbnailsContainer.style.justifyContent = "flex-start"; // Canh tr√°i c√°c ·∫£nh thu nh·ªè

       // Lo·∫°i tr·ª´ h√¨nh ·∫£nh c·ªßa chatbot v√† user
       const filteredImages = allImages.filter(img => 
           img.src !== "https://gigamall.com.vn/data/2024/05/10/14290213_shushiwa_thumbnail.jpg" &&
           img.src !== "https://cdn-icons-png.flaticon.com/512/10307/10307852.png"
       );

       filteredImages.forEach((img, index) => {
           const thumbnail = document.createElement("img");
           thumbnail.src = img.src;
           thumbnail.style.width = "60px";
           thumbnail.style.height = "60px";
           thumbnail.style.marginRight = "10px";
           thumbnail.style.cursor = "pointer";
           thumbnail.style.borderRadius = "5px";
           thumbnail.style.border = "2px solid transparent";
           thumbnail.style.transition = "border 0.3s";
           thumbnail.style.opacity = "0.5"; // L√†m m·ªù c√°c ·∫£nh thu nh·ªè ch∆∞a ph√≥ng to

           // N·∫øu ·∫£nh ƒëang ph√≥ng to, ƒë·∫∑t opacity = 1
           if (index === currentIndex) {
               thumbnail.style.opacity = "1"; // ƒê·∫£m b·∫£o ·∫£nh ƒëang xem s√°ng h∆°n
               thumbnail.style.border = "1px solid red"; // T·∫°o vi·ªÅn ƒë·ªè cho ·∫£nh
           }

           // Ch·ªçn ·∫£nh thu nh·ªè v√† c·∫≠p nh·∫≠t ·∫£nh ph√≥ng to khi b·∫•m v√†o ·∫£nh thu nh·ªè
           thumbnail.addEventListener("click", function (e) {
               e.stopPropagation(); // NgƒÉn kh√¥ng ƒë√≥ng modal khi click v√†o h√¨nh thu nh·ªè

               // C·∫≠p nh·∫≠t ·∫£nh ph√≥ng to khi ch·ªçn ·∫£nh thu nh·ªè
               modalImage.src = img.src;
               currentIndex = index; // C·∫≠p nh·∫≠t ch·ªâ s·ªë c·ªßa ·∫£nh ƒëang xem

               // C·∫≠p nh·∫≠t ƒë·ªô s√°ng cho t·∫•t c·∫£ ·∫£nh thu nh·ªè
               filteredImages.forEach((otherImg, otherIndex) => {
                   const otherThumbnail = thumbnailsContainer.children[otherIndex];
                   if (otherIndex !== currentIndex) {
                       otherThumbnail.style.opacity = "0.5"; // L√†m m·ªù ·∫£nh kh√°c
                       otherThumbnail.style.border = "2px solid transparent"; // X√≥a vi·ªÅn
                   } else {
                       otherThumbnail.style.opacity = "1"; // Kh√¥ng l√†m m·ªù ·∫£nh ƒë√£ ch·ªçn
                       otherThumbnail.style.border = "1px solid red"; // Th√™m vi·ªÅn ƒë·ªè cho ·∫£nh ƒëang m·ªü
                   }
               });
           });

           // Th√™m hi·ªáu ·ª©ng border khi hover v√†o ·∫£nh thu nh·ªè
           thumbnail.addEventListener("mouseenter", function() {
               thumbnail.style.border = "2px solid #ff7f50"; // Ch·ªânh m√†u border khi hover
           });

           thumbnail.addEventListener("mouseleave", function() {
               if (thumbnail.style.opacity !== "1") {
                   thumbnail.style.border = "2px solid transparent"; // ƒê·ªïi l·∫°i border ban ƒë·∫ßu khi hover ra
               }
           });

           thumbnailsContainer.appendChild(thumbnail);
       });

       modal.appendChild(thumbnailsContainer);

       // ƒê√≥ng modal khi click ngo√†i ·∫£nh (kh√¥ng ph·∫£i h√¨nh thu nh·ªè)
       modal.addEventListener("click", function (event) {
           if (event.target !== modalImage && event.target !== thumbnailsContainer) {
               document.body.removeChild(modal);
           }
       });

       document.body.appendChild(modal);
   }


   // C√°c c√¢u h·ªèi g·ª£i √Ω ban ƒë·∫ßu
   const initialQuestions = [
       "Menu c·ªßa b·∫°n l√† g√¨?",
       "Gi√° m√≥n sushi l√† bao nhi√™u?",
       "Gi·ªù m·ªü c·ª≠a c·ªßa c·ª≠a h√†ng l√† khi n√†o?",
       "B·∫°n c√≥ giao h√†ng kh√¥ng?"
   ];

   // Hi·ªÉn th·ªã c√°c c√¢u h·ªèi g·ª£i √Ω
   function showSuggestions(questions) {
       suggestions.innerHTML = ''; // X√≥a c√°c c√¢u h·ªèi c≈©
       questions.forEach(question => {
           const button = document.createElement("button");
           button.innerText = question;
           button.style.margin = "5px";
           button.style.padding = "5px 10px";
           button.style.backgroundColor = "#ff7f50";
           button.style.color = "white";
           button.style.border = "none";
           button.style.borderRadius = "5px";
           button.style.cursor = "pointer";
           button.style.whiteSpace = "nowrap";  // NgƒÉn c√¢u h·ªèi b·ªã c·∫Øt ngang
           button.addEventListener("click", () => {
               chatInput.value = question; // ƒêi·ªÅn c√¢u h·ªèi v√†o √¥ nh·∫≠p
               sendMessage(question); // G·ª≠i c√¢u h·ªèi
           });
           suggestions.appendChild(button);
       });
   }

   
   // Hi·ªÉn th·ªã c√¢u h·ªèi g·ª£i √Ω ban ƒë·∫ßu
   showSuggestions(initialQuestions);

   chatSend.addEventListener("click", function () {
       const userMessage = chatInput.value;
       if (!userMessage.trim()) return;
       sendMessage(userMessage);
   });

   // H√†m g·ª≠i c√¢u h·ªèi t·ªõi backend v√† tr·∫£ l·ªùi t·ª´ file JSON
   async function sendMessage(message) {
       const userMessageDiv = document.createElement("div");
       userMessageDiv.style.display = "flex";
       userMessageDiv.style.justifyContent = "flex-end";
       userMessageDiv.style.marginBottom = "10px";
       userMessageDiv.innerHTML = `
           <div style="background:#f1f0f0;padding:10px;border-radius:10px;max-width:60%;text-align:right;display:flex;align-items:center;">
               <span style="margin-left:10px;">${message}</span>
           </div>
           <img src="https://cdn-icons-png.flaticon.com/512/10307/10307852.png" title="B·∫°n" style="width:25px;height:25px;border-radius:50%;vertical-align:middle;margin-left:5px;" />
       `;
       chatBody.appendChild(userMessageDiv);
       chatInput.value = "";

       // Hi·ªáu ·ª©ng "ƒêang tr·∫£ l·ªùi..."
       const typingIndicator = document.createElement("div");
       typingIndicator.innerHTML = `
           <div style="display: flex; align-items: center; padding: 10px;">
               <img src="https://gigamall.com.vn/data/2024/05/10/14290213_shushiwa_thumbnail.jpg" style="width:25px;height:25px;border-radius:50%;margin-right:10px;" />
               <em>ƒêang tr·∫£ l·ªùi...</em>
           </div>
       `;
       chatBody.appendChild(typingIndicator);
	   try {
	       // G·ª≠i tin nh·∫Øn ƒë·∫øn API backend
	       const response = await fetch('/api/chatbot', {
	           method: 'POST',
	           headers: {
	               'Content-Type': 'application/json'
	           },
	           body: JSON.stringify({ message })
	       });

	       const data = await response.json();
	       chatBody.removeChild(typingIndicator); // X√≥a hi·ªáu ·ª©ng ƒëang g√µ

	       // T·∫°o th·∫ª ch·ª©a tin nh·∫Øn c·ªßa chatbot
	       const botMessageDiv = document.createElement("div");
	       botMessageDiv.style.display = "flex";
	       botMessageDiv.style.justifyContent = "flex-start";
	       botMessageDiv.style.marginBottom = "10px";

	       // Avatar c·ªßa chatbot
	       const botAvatar = document.createElement("img");
	       botAvatar.src = "https://gigamall.com.vn/data/2024/05/10/14290213_shushiwa_thumbnail.jpg";
	       botAvatar.title = "Chatbot";
	       botAvatar.style.width = "25px";
	       botAvatar.style.height = "25px";
	       botAvatar.style.borderRadius = "50%";
	       botAvatar.style.verticalAlign = "middle";
	       botAvatar.style.marginRight = "5px";

	       // Khung ch·ª©a n·ªôi dung tin nh·∫Øn
	       const botMessageContent = document.createElement("div");
	       botMessageContent.style.background = "#ff7f50";
	       botMessageContent.style.color = "white";
	       botMessageContent.style.padding = "10px";
	       botMessageContent.style.borderRadius = "10px";
	       botMessageContent.style.maxWidth = "60%";
	       botMessageContent.style.textAlign = "left";
	       botMessageContent.style.whiteSpace = "pre-line";

	       // X·ª≠ l√Ω ƒë·ªãnh d·∫°ng tin nh·∫Øn tr·∫£ v·ªÅ
	       let formattedReply;
	       if (data.reply.includes("* ")) {
	           formattedReply = data.reply
	               .replace(/\*{2}(.+?)\*{2}/g, '<strong>$1</strong>') // Chuy·ªÉn **Ti√™u ƒë·ªÅ** th√†nh <strong>Ti√™u ƒë·ªÅ</strong>
	               .replace(/\* (.+)/g, '<li>$1</li>') // Chuy·ªÉn * m·ª•c th√†nh danh s√°ch <li>
	               .replace(/(<li>.*?<\/li>)/g, '<ul>$1</ul>'); // G√≥i danh s√°ch trong <ul>
	       } else {
	           formattedReply = data.reply.replace(/\n/g, "<br>"); // Gi·ªØ xu·ªëng d√≤ng v·ªõi <br>
	       }

	       botMessageContent.innerHTML = formattedReply;
	       botMessageDiv.appendChild(botAvatar);
	       botMessageDiv.appendChild(botMessageContent);
	       chatBody.appendChild(botMessageDiv);

	   } catch (error) {
	       console.error('L·ªói khi g·ªçi API:', error);
	       chatBody.removeChild(typingIndicator); // X√≥a hi·ªáu ·ª©ng n·∫øu l·ªói
	   }

   }

});
